{"version":3,"file":"bundle.js","mappings":";;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACkD;;;;;;;UCjDlD;UACA;;UAEA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;;UAEA;UACA;;UAEA;UACA;UACA;;;;;WCtBA;WACA;WACA;WACA;WACA,yCAAyC,wCAAwC;WACjF;WACA;WACA;;;;;WCPA;;;;;WCAA;WACA;WACA;WACA,uDAAuD,iBAAiB;WACxE;WACA,gDAAgD,aAAa;WAC7D;;;;;;;;;;;;ACNsE;AACtE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA,EAAE,sDAAS;AACX;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ,IAAI,0DAAa;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI,6DAAoB;AACxB;AACA;AACA,KAAK;AACL,IAAI;AACJ,IAAI,6DAAoB;AACxB;AACA;AACA;AACA,KAAK;AACL,IAAI;AACJ,IAAI,6DAAoB;AACxB;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oBAAoB,yDACZ;AACR;AACA,KAAK;AACL;AACA,EAAE,4DAAmB;AACrB;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB,yDACf;AACR;AACA,KAAK;AACL;AACA;AACA,sBAAsB,qDAAY;AAClC;AACA,MAAM,qDAAY;AAClB,IAAI,qDAAY;AAChB;AACA,IAAI,SAAS,qDAAY;AACzB,IAAI,qDAAY;AAChB;AACA;AACA;AACA;AACA;AACA,+CAA+C,MAAM;AACrD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA,IAAI;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","sources":["webpack://todo-list/./src/createToDo.js","webpack://todo-list/webpack/bootstrap","webpack://todo-list/webpack/runtime/define property getters","webpack://todo-list/webpack/runtime/hasOwnProperty shorthand","webpack://todo-list/webpack/runtime/make namespace object","webpack://todo-list/./src/index.js"],"sourcesContent":["/*  factory Function to create new ToDo Items\r\n    Every object Should have | Title, Description, Due Date, Priority, Checkbox(True == Completed), Id |\r\n\r\n    For Testing\r\n    createNewToDo(\"a\", \"a\", \"a\", \"top\", true);\r\n    let test1 = createNewToDo(\"b\", \"b\", \"b\", \"mid\", true);\r\n    let test2 = createNewToDo(\"c\", \"c\", \"c\", \"bottom\", false);\r\n\r\n*/\r\n\r\nlet id = 0;\r\nlet allToDoArray = [];\r\n\r\nfunction generateId() {\r\n  let test = id++;\r\n  return test;\r\n}\r\n\r\nfunction createNewToDo(\r\n  title,\r\n  Desc,\r\n  date,\r\n  priority,\r\n  completed = false,\r\n  currentProject = \"standard\"\r\n) {\r\n  let todo = {\r\n    Title: title,\r\n    Description: Desc,\r\n    DueDate: date,\r\n    Priority: priority,\r\n    Completed: completed,\r\n    Id: generateId(),\r\n    CurrentProject: currentProject,\r\n  };\r\n  allToDoArray.push(todo);\r\n\r\n  return todo;\r\n}\r\n\r\nfunction checkToDo() {\r\n  if (allToDoArray.length < 1) {\r\n    return console.log(\"empty\");\r\n  }\r\n  allToDoArray.forEach((item) => {\r\n    console.table(item);\r\n  });\r\n}\r\n\r\nexport { createNewToDo, checkToDo, allToDoArray };\r\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","import { createNewToDo, checkToDo, allToDoArray } from \"./createToDo\";\r\n\r\nconsole.log(\"Greetings, General Kenobi!\");\r\nlet popup = document.getElementById(\"popup\");\r\n\r\nconst renderBodyElements = (function () {\r\n  let openPopupBtn = document.querySelector(\".btn-create-todo\");\r\n  let closePopupBtn = document.querySelector(\".popup-btn-exit\");\r\n  let newToDoItem = document.querySelector(\".popup-btn-add\");\r\n  let popup = document.getElementById(\"popup\");\r\n  let formTitle = document.querySelector(\"#title\");\r\n  let formDesc = document.querySelector(\"#description\");\r\n  let formPriority = document.querySelector(\"#priority\");\r\n  let formDueDate = document.querySelector(\"#duedate\");\r\n  let todoList = document.querySelector(\".todo-list\");\r\n  let filterOption = document.querySelector(\".select-filter\");\r\n  return {\r\n    openPopupBtn,\r\n    closePopupBtn,\r\n    newToDoItem,\r\n    popup,\r\n    formTitle,\r\n    formDesc,\r\n    formPriority,\r\n    formDueDate,\r\n    todoList,\r\n    filterOption,\r\n  };\r\n})();\r\n\r\n// Event Listeners For opening & Closing Form\r\nrenderBodyElements.openPopupBtn.addEventListener(\"click\", () => {\r\n  if (popup.classList.contains(\"open-popup\")) {\r\n    closePopup();\r\n    resetForm();\r\n  } else {\r\n    showPopup();\r\n  }\r\n});\r\n\r\n// Listener On Form Close Btn\r\nrenderBodyElements.closePopupBtn.addEventListener(\"click\", () => {\r\n  closePopup();\r\n  resetForm();\r\n});\r\n\r\n// Listener ADD TODO\r\nrenderBodyElements.newToDoItem.addEventListener(\"click\", () => {\r\n  newToDo();\r\n  resetForm();\r\n  checkToDo();\r\n  closePopup();\r\n});\r\n\r\n// Listener for Filter Options\r\nrenderBodyElements.filterOption.addEventListener(\"click\", filterToDo);\r\n\r\n// Functions for Removing Open/Close Popup CLASS\r\nconst showPopup = () => {\r\n  renderBodyElements.popup.classList.add(\"open-popup\");\r\n};\r\nconst closePopup = () => {\r\n  renderBodyElements.popup.classList.remove(\"open-popup\");\r\n};\r\n\r\n// Reset Form Values Function\r\nconst resetForm = () => {\r\n  renderBodyElements.formTitle.value = null;\r\n  renderBodyElements.formDesc.value = null;\r\n  renderBodyElements.formDueDate.value = null;\r\n  renderBodyElements.formPriority.value = \"Low\";\r\n};\r\n\r\n// Get Values from Form and Send to ToDo Func..\r\nconst newToDo = () => {\r\n  let title = renderBodyElements.formTitle.value;\r\n  let desc = renderBodyElements.formDesc.value;\r\n  let dueDate = renderBodyElements.formDueDate.value;\r\n  let prio = renderBodyElements.formPriority.value;\r\n  let done = false;\r\n  // let current = getCurrentProject();\r\n  if (\r\n    title.length < 2 ||\r\n    desc.length < 2 ||\r\n    dueDate.length < 2 ||\r\n    prio.length < 1\r\n  ) {\r\n    alert(\"Please Fill In All The Boxes!\");\r\n  } else {\r\n    createNewToDo(title, desc, dueDate, prio, done);\r\n  }\r\n  fillToDoList();\r\n};\r\n\r\n// Fill ToDo List\r\nfunction fillToDoList(filter = \"all\") {\r\n  let list = renderBodyElements.todoList;\r\n  while (list.firstChild) {\r\n    list.removeChild(list.lastChild);\r\n  }\r\n  if (filter == \"all\") {\r\n    allToDoArray.forEach((item) => {\r\n      createToDoItem(item);\r\n      console.table(item);\r\n    });\r\n  } else if (filter == \"completed\") {\r\n    allToDoArray.forEach((item) => {\r\n      if (item.Completed == true) {\r\n        createToDoItem(item);\r\n      }\r\n    });\r\n  } else if (filter == \"uncompleted\") {\r\n    allToDoArray.forEach((item) => {\r\n      if (item.Completed == false) {\r\n        createToDoItem(item);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\n// Function for generating a new ToDo item\r\nfunction createToDoItem(todoObject) {\r\n  // Div element\r\n  const todoDiv = document.createElement(\"div\");\r\n  todoDiv.classList.add(\"todo\");\r\n  todoDiv.setAttribute(\"id\", \"todo\" + todoObject.Id);\r\n  if (todoObject.Completed == true) {\r\n    todoDiv.classList.add(\"todo-line\");\r\n  }\r\n\r\n  // Span Title\r\n  const title = document.createElement(\"span\");\r\n  title.classList.add(\"todo-item-title\");\r\n  title.innerText = todoObject.Title + \" |\";\r\n\r\n  // Span Desc\r\n  const descr = document.createElement(\"span\");\r\n  descr.classList.add(\"todo-item-desc\");\r\n  descr.innerText = todoObject.Description;\r\n\r\n  // Span Date\r\n  const dueDate = document.createElement(\"span\");\r\n  dueDate.classList.add(\"todo-item-dueDate\");\r\n  dueDate.innerText = \"| \" + todoObject.DueDate;\r\n\r\n  // Span Priority\r\n  const priority = document.createElement(\"span\");\r\n  priority.classList.add(\"todo-item-priority\");\r\n  priority.innerText = \"| \" + todoObject.Priority;\r\n\r\n  // list item\r\n  const newTodo = document.createElement(\"li\");\r\n  newTodo.classList.add(\"todo-item\");\r\n  newTodo.append(title, descr, dueDate, priority);\r\n  todoDiv.appendChild(newTodo);\r\n\r\n  //btns\r\n  const completedBtn = document.createElement(\"button\");\r\n  completedBtn.innerHTML = \"<i class='fas fa-check'></i>\";\r\n  completedBtn.classList.add(\"complete-btn\");\r\n  completedBtn.addEventListener(\"click\", () => completed(todoObject.Id));\r\n  todoDiv.appendChild(completedBtn);\r\n\r\n  let removeBtn = document.createElement(\"button\");\r\n  removeBtn.innerHTML = \"<i class='fas fa-trash'></i>\";\r\n  removeBtn.classList.add(\"remove-btn\");\r\n  removeBtn.addEventListener(\"click\", () => removeToDo(todoObject.Id));\r\n  todoDiv.appendChild(removeBtn);\r\n\r\n  // Append to Todo LIST\r\n  renderBodyElements.todoList.appendChild(todoDiv);\r\n}\r\n\r\n// Function for removing ToDo\r\nfunction removeToDo(ToDoId) {\r\n  let removeIndex = allToDoArray\r\n    .map(function (todoItem) {\r\n      return todoItem.Id;\r\n    })\r\n    .indexOf(ToDoId);\r\n  allToDoArray.splice(removeIndex, 1);\r\n\r\n  fillToDoList();\r\n}\r\n\r\n// Function for Adding ID line-through;\r\nfunction completed(ToDoId) {\r\n  let completedIndex = allToDoArray\r\n    .map(function (todoItem) {\r\n      return todoItem.Id;\r\n    })\r\n    .indexOf(ToDoId);\r\n\r\n  let currentToDoId = allToDoArray[completedIndex].Id;\r\n\r\n  if (allToDoArray[completedIndex].Completed == false) {\r\n    allToDoArray[completedIndex].Completed = true;\r\n    changeStatus(true, currentToDoId);\r\n  } else if (allToDoArray[completedIndex].Completed == true) {\r\n    allToDoArray[completedIndex].Completed = false;\r\n    changeStatus(false, currentToDoId);\r\n  }\r\n}\r\n\r\nfunction changeStatus(status, index) {\r\n  let current = document.querySelector(`#todo${index}`);\r\n  if (status == false || status == true) {\r\n    current.classList.toggle(\"todo-line\");\r\n  }\r\n}\r\n\r\nfunction filterToDo() {\r\n  if (renderBodyElements.filterOption.value == \"all\") {\r\n    fillToDoList(\"all\");\r\n  } else if (renderBodyElements.filterOption.value == \"completed\") {\r\n    fillToDoList(\"completed\");\r\n  } else if (renderBodyElements.filterOption.value == \"uncompleted\") {\r\n    fillToDoList(\"uncompleted\");\r\n  }\r\n}\r\n\r\n// Gets Current Project name\r\n// function getCurrentProject() {\r\n//   let main = document.querySelector(\".main-content\");\r\n//   let current = main.getAttribute(\"id\");\r\n//   return current;\r\n// }\r\n"],"names":[],"sourceRoot":""}